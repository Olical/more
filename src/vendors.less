// These are functions that remove the need for vendor prefixes
// Use them as mixins and pass all of your arguments within the parentheses, like so
//     div { #more > .border-radius(5px); }

#more {
	.border-radius(@args: none) {
		-webkit-border-radius: @args;
		-moz-border-radius: @args;
		border-radius: @args;
	}
	
	.box-shadow(@args: none) {
		-webkit-box-shadow: @args;
		-moz-box-shadow: @args;
		box-shadow: @args;
	}
	
	.column-count(@args: none) {
		-moz-column-count: @args;
		-webkit-column-count: @args;
		column-count: @args;
	}
	
	.column-gap(@args: none) {
		-moz-column-gap: @args;
		-webkit-column-gap: @args;
		column-gap: @args;
	}
	
	.box-sizing(@args: none) {
		-moz-box-sizing: @args;
		-webkit-box-sizing: @args;
		box-sizing: @args;
	}
	
	.transition(@args: none) {
		-webkit-transition: @args;
		-moz-transition: @args;
		-o-transition: @args;
		transition: @args;
	}
	
	.transform(@args: none) {
		-moz-transform: @args;
		-webkit-transform: @args;
		-ms-transform: @args;
		transform: @args;
	}
	
	// This opacity mixin is also cross browser
	.opacity(@opacity: 1) {
		@msOpacity: @opacity * 100;
		
		-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{msOpacity})";
		filter: alpha(opacity=@msOpacity);
		-moz-opacity: @opacity;
		-khtml-opacity: @opacity;
		opacity: @opacity;
	}
}